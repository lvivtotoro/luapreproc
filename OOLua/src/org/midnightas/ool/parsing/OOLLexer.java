// Generated from OOL.g4 by ANTLR 4.5.3
package org.midnightas.ool.parsing;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class OOLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		LEN_OPERATOR=46, LOCAL=47, STATIC=48, IDENTIFIER=49, NUMBER=50, STRING=51, 
		BLOCK_COMMENT=52, LINE_COMMENT=53, WHITESPACE=54;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "DIGIT", "LEN_OPERATOR", "LOCAL", 
		"STATIC", "IDENTIFIER", "NUMBER", "STRING", "BLOCK_COMMENT", "LINE_COMMENT", 
		"WHITESPACE"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'include'", "';'", "'function'", "'('", "')'", "'end'", "'='", 
		"'if'", "'then'", "'else'", "'while'", "'do'", "'break'", "'for'", "','", 
		"'in'", "'foreach'", "'return'", "'and'", "'or'", "'%'", "'=='", "'<'", 
		"'>'", "'<='", "'>='", "'*'", "'/'", "'+'", "'-'", "'..'", "'?'", "':'", 
		"'instanceof'", "'['", "']'", "'lambda'", "'nil'", "'{'", "'}'", "'.'", 
		"'class'", "'extending'", "'contains'", "'constructor'", "'#'", "'local'", 
		"'static'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, "LEN_OPERATOR", 
		"LOCAL", "STATIC", "IDENTIFIER", "NUMBER", "STRING", "BLOCK_COMMENT", 
		"LINE_COMMENT", "WHITESPACE"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public OOLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "OOL.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\28\u017c\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3"+
		"\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7"+
		"\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3"+
		"\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\17\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24"+
		"\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32"+
		"\3\32\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3 "+
		"\3!\3!\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3%\3%\3&\3&\3&\3"+
		"&\3&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3+\3+\3+\3+\3,\3,\3"+
		",\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3"+
		".\3.\3.\3.\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3"+
		"\62\3\62\3\62\3\62\3\62\3\62\3\63\6\63\u013f\n\63\r\63\16\63\u0140\3\64"+
		"\6\64\u0144\n\64\r\64\16\64\u0145\3\64\3\64\6\64\u014a\n\64\r\64\16\64"+
		"\u014b\5\64\u014e\n\64\3\65\3\65\7\65\u0152\n\65\f\65\16\65\u0155\13\65"+
		"\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66\7\66\u015f\n\66\f\66\16\66\u0162"+
		"\13\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\7\67\u016f"+
		"\n\67\f\67\16\67\u0172\13\67\3\67\3\67\38\68\u0177\n8\r8\168\u0178\38"+
		"\38\3\u0160\29\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16"+
		"\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34"+
		"\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\2_\60a\61c\62e\63g\64"+
		"i\65k\66m\67o8\3\2\7\3\2\62;\6\2&&C\\aac|\3\2$$\4\2\f\f\17\17\5\2\13\f"+
		"\17\17\"\"\u0182\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13"+
		"\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2"+
		"\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2"+
		"!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3"+
		"\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2"+
		"\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E"+
		"\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2"+
		"\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2_\3\2\2\2"+
		"\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m"+
		"\3\2\2\2\2o\3\2\2\2\3q\3\2\2\2\5y\3\2\2\2\7{\3\2\2\2\t\u0084\3\2\2\2\13"+
		"\u0086\3\2\2\2\r\u0088\3\2\2\2\17\u008c\3\2\2\2\21\u008e\3\2\2\2\23\u0091"+
		"\3\2\2\2\25\u0096\3\2\2\2\27\u009b\3\2\2\2\31\u00a1\3\2\2\2\33\u00a4\3"+
		"\2\2\2\35\u00aa\3\2\2\2\37\u00ae\3\2\2\2!\u00b0\3\2\2\2#\u00b3\3\2\2\2"+
		"%\u00bb\3\2\2\2\'\u00c2\3\2\2\2)\u00c6\3\2\2\2+\u00c9\3\2\2\2-\u00cb\3"+
		"\2\2\2/\u00ce\3\2\2\2\61\u00d0\3\2\2\2\63\u00d2\3\2\2\2\65\u00d5\3\2\2"+
		"\2\67\u00d8\3\2\2\29\u00da\3\2\2\2;\u00dc\3\2\2\2=\u00de\3\2\2\2?\u00e0"+
		"\3\2\2\2A\u00e3\3\2\2\2C\u00e5\3\2\2\2E\u00e7\3\2\2\2G\u00f2\3\2\2\2I"+
		"\u00f4\3\2\2\2K\u00f6\3\2\2\2M\u00fd\3\2\2\2O\u0101\3\2\2\2Q\u0103\3\2"+
		"\2\2S\u0105\3\2\2\2U\u0107\3\2\2\2W\u010d\3\2\2\2Y\u0117\3\2\2\2[\u0120"+
		"\3\2\2\2]\u012c\3\2\2\2_\u012e\3\2\2\2a\u0130\3\2\2\2c\u0136\3\2\2\2e"+
		"\u013e\3\2\2\2g\u0143\3\2\2\2i\u014f\3\2\2\2k\u0158\3\2\2\2m\u016a\3\2"+
		"\2\2o\u0176\3\2\2\2qr\7k\2\2rs\7p\2\2st\7e\2\2tu\7n\2\2uv\7w\2\2vw\7f"+
		"\2\2wx\7g\2\2x\4\3\2\2\2yz\7=\2\2z\6\3\2\2\2{|\7h\2\2|}\7w\2\2}~\7p\2"+
		"\2~\177\7e\2\2\177\u0080\7v\2\2\u0080\u0081\7k\2\2\u0081\u0082\7q\2\2"+
		"\u0082\u0083\7p\2\2\u0083\b\3\2\2\2\u0084\u0085\7*\2\2\u0085\n\3\2\2\2"+
		"\u0086\u0087\7+\2\2\u0087\f\3\2\2\2\u0088\u0089\7g\2\2\u0089\u008a\7p"+
		"\2\2\u008a\u008b\7f\2\2\u008b\16\3\2\2\2\u008c\u008d\7?\2\2\u008d\20\3"+
		"\2\2\2\u008e\u008f\7k\2\2\u008f\u0090\7h\2\2\u0090\22\3\2\2\2\u0091\u0092"+
		"\7v\2\2\u0092\u0093\7j\2\2\u0093\u0094\7g\2\2\u0094\u0095\7p\2\2\u0095"+
		"\24\3\2\2\2\u0096\u0097\7g\2\2\u0097\u0098\7n\2\2\u0098\u0099\7u\2\2\u0099"+
		"\u009a\7g\2\2\u009a\26\3\2\2\2\u009b\u009c\7y\2\2\u009c\u009d\7j\2\2\u009d"+
		"\u009e\7k\2\2\u009e\u009f\7n\2\2\u009f\u00a0\7g\2\2\u00a0\30\3\2\2\2\u00a1"+
		"\u00a2\7f\2\2\u00a2\u00a3\7q\2\2\u00a3\32\3\2\2\2\u00a4\u00a5\7d\2\2\u00a5"+
		"\u00a6\7t\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7c\2\2\u00a8\u00a9\7m\2\2"+
		"\u00a9\34\3\2\2\2\u00aa\u00ab\7h\2\2\u00ab\u00ac\7q\2\2\u00ac\u00ad\7"+
		"t\2\2\u00ad\36\3\2\2\2\u00ae\u00af\7.\2\2\u00af \3\2\2\2\u00b0\u00b1\7"+
		"k\2\2\u00b1\u00b2\7p\2\2\u00b2\"\3\2\2\2\u00b3\u00b4\7h\2\2\u00b4\u00b5"+
		"\7q\2\2\u00b5\u00b6\7t\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7c\2\2\u00b8"+
		"\u00b9\7e\2\2\u00b9\u00ba\7j\2\2\u00ba$\3\2\2\2\u00bb\u00bc\7t\2\2\u00bc"+
		"\u00bd\7g\2\2\u00bd\u00be\7v\2\2\u00be\u00bf\7w\2\2\u00bf\u00c0\7t\2\2"+
		"\u00c0\u00c1\7p\2\2\u00c1&\3\2\2\2\u00c2\u00c3\7c\2\2\u00c3\u00c4\7p\2"+
		"\2\u00c4\u00c5\7f\2\2\u00c5(\3\2\2\2\u00c6\u00c7\7q\2\2\u00c7\u00c8\7"+
		"t\2\2\u00c8*\3\2\2\2\u00c9\u00ca\7\'\2\2\u00ca,\3\2\2\2\u00cb\u00cc\7"+
		"?\2\2\u00cc\u00cd\7?\2\2\u00cd.\3\2\2\2\u00ce\u00cf\7>\2\2\u00cf\60\3"+
		"\2\2\2\u00d0\u00d1\7@\2\2\u00d1\62\3\2\2\2\u00d2\u00d3\7>\2\2\u00d3\u00d4"+
		"\7?\2\2\u00d4\64\3\2\2\2\u00d5\u00d6\7@\2\2\u00d6\u00d7\7?\2\2\u00d7\66"+
		"\3\2\2\2\u00d8\u00d9\7,\2\2\u00d98\3\2\2\2\u00da\u00db\7\61\2\2\u00db"+
		":\3\2\2\2\u00dc\u00dd\7-\2\2\u00dd<\3\2\2\2\u00de\u00df\7/\2\2\u00df>"+
		"\3\2\2\2\u00e0\u00e1\7\60\2\2\u00e1\u00e2\7\60\2\2\u00e2@\3\2\2\2\u00e3"+
		"\u00e4\7A\2\2\u00e4B\3\2\2\2\u00e5\u00e6\7<\2\2\u00e6D\3\2\2\2\u00e7\u00e8"+
		"\7k\2\2\u00e8\u00e9\7p\2\2\u00e9\u00ea\7u\2\2\u00ea\u00eb\7v\2\2\u00eb"+
		"\u00ec\7c\2\2\u00ec\u00ed\7p\2\2\u00ed\u00ee\7e\2\2\u00ee\u00ef\7g\2\2"+
		"\u00ef\u00f0\7q\2\2\u00f0\u00f1\7h\2\2\u00f1F\3\2\2\2\u00f2\u00f3\7]\2"+
		"\2\u00f3H\3\2\2\2\u00f4\u00f5\7_\2\2\u00f5J\3\2\2\2\u00f6\u00f7\7n\2\2"+
		"\u00f7\u00f8\7c\2\2\u00f8\u00f9\7o\2\2\u00f9\u00fa\7d\2\2\u00fa\u00fb"+
		"\7f\2\2\u00fb\u00fc\7c\2\2\u00fcL\3\2\2\2\u00fd\u00fe\7p\2\2\u00fe\u00ff"+
		"\7k\2\2\u00ff\u0100\7n\2\2\u0100N\3\2\2\2\u0101\u0102\7}\2\2\u0102P\3"+
		"\2\2\2\u0103\u0104\7\177\2\2\u0104R\3\2\2\2\u0105\u0106\7\60\2\2\u0106"+
		"T\3\2\2\2\u0107\u0108\7e\2\2\u0108\u0109\7n\2\2\u0109\u010a\7c\2\2\u010a"+
		"\u010b\7u\2\2\u010b\u010c\7u\2\2\u010cV\3\2\2\2\u010d\u010e\7g\2\2\u010e"+
		"\u010f\7z\2\2\u010f\u0110\7v\2\2\u0110\u0111\7g\2\2\u0111\u0112\7p\2\2"+
		"\u0112\u0113\7f\2\2\u0113\u0114\7k\2\2\u0114\u0115\7p\2\2\u0115\u0116"+
		"\7i\2\2\u0116X\3\2\2\2\u0117\u0118\7e\2\2\u0118\u0119\7q\2\2\u0119\u011a"+
		"\7p\2\2\u011a\u011b\7v\2\2\u011b\u011c\7c\2\2\u011c\u011d\7k\2\2\u011d"+
		"\u011e\7p\2\2\u011e\u011f\7u\2\2\u011fZ\3\2\2\2\u0120\u0121\7e\2\2\u0121"+
		"\u0122\7q\2\2\u0122\u0123\7p\2\2\u0123\u0124\7u\2\2\u0124\u0125\7v\2\2"+
		"\u0125\u0126\7t\2\2\u0126\u0127\7w\2\2\u0127\u0128\7e\2\2\u0128\u0129"+
		"\7v\2\2\u0129\u012a\7q\2\2\u012a\u012b\7t\2\2\u012b\\\3\2\2\2\u012c\u012d"+
		"\t\2\2\2\u012d^\3\2\2\2\u012e\u012f\7%\2\2\u012f`\3\2\2\2\u0130\u0131"+
		"\7n\2\2\u0131\u0132\7q\2\2\u0132\u0133\7e\2\2\u0133\u0134\7c\2\2\u0134"+
		"\u0135\7n\2\2\u0135b\3\2\2\2\u0136\u0137\7u\2\2\u0137\u0138\7v\2\2\u0138"+
		"\u0139\7c\2\2\u0139\u013a\7v\2\2\u013a\u013b\7k\2\2\u013b\u013c\7e\2\2"+
		"\u013cd\3\2\2\2\u013d\u013f\t\3\2\2\u013e\u013d\3\2\2\2\u013f\u0140\3"+
		"\2\2\2\u0140\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141f\3\2\2\2\u0142\u0144"+
		"\5]/\2\u0143\u0142\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0143\3\2\2\2\u0145"+
		"\u0146\3\2\2\2\u0146\u014d\3\2\2\2\u0147\u0149\7\60\2\2\u0148\u014a\5"+
		"]/\2\u0149\u0148\3\2\2\2\u014a\u014b\3\2\2\2\u014b\u0149\3\2\2\2\u014b"+
		"\u014c\3\2\2\2\u014c\u014e\3\2\2\2\u014d\u0147\3\2\2\2\u014d\u014e\3\2"+
		"\2\2\u014eh\3\2\2\2\u014f\u0153\7$\2\2\u0150\u0152\n\4\2\2\u0151\u0150"+
		"\3\2\2\2\u0152\u0155\3\2\2\2\u0153\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154"+
		"\u0156\3\2\2\2\u0155\u0153\3\2\2\2\u0156\u0157\7$\2\2\u0157j\3\2\2\2\u0158"+
		"\u0159\7/\2\2\u0159\u015a\7/\2\2\u015a\u015b\7]\2\2\u015b\u015c\7]\2\2"+
		"\u015c\u0160\3\2\2\2\u015d\u015f\13\2\2\2\u015e\u015d\3\2\2\2\u015f\u0162"+
		"\3\2\2\2\u0160\u0161\3\2\2\2\u0160\u015e\3\2\2\2\u0161\u0163\3\2\2\2\u0162"+
		"\u0160\3\2\2\2\u0163\u0164\7/\2\2\u0164\u0165\7/\2\2\u0165\u0166\7_\2"+
		"\2\u0166\u0167\7_\2\2\u0167\u0168\3\2\2\2\u0168\u0169\b\66\2\2\u0169l"+
		"\3\2\2\2\u016a\u016b\7/\2\2\u016b\u016c\7/\2\2\u016c\u0170\3\2\2\2\u016d"+
		"\u016f\n\5\2\2\u016e\u016d\3\2\2\2\u016f\u0172\3\2\2\2\u0170\u016e\3\2"+
		"\2\2\u0170\u0171\3\2\2\2\u0171\u0173\3\2\2\2\u0172\u0170\3\2\2\2\u0173"+
		"\u0174\b\67\2\2\u0174n\3\2\2\2\u0175\u0177\t\6\2\2\u0176\u0175\3\2\2\2"+
		"\u0177\u0178\3\2\2\2\u0178\u0176\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u017a"+
		"\3\2\2\2\u017a\u017b\b8\2\2\u017bp\3\2\2\2\13\2\u0140\u0145\u014b\u014d"+
		"\u0153\u0160\u0170\u0178\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}